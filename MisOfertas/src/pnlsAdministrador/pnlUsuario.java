/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pnlsAdministrador;

import MisPaquetes.Empleado;
import MisPaquetes.Empresa;
import MisPaquetes.Persona;
import MisPaquetes.Sucursal;
import MisPaquetes.Usuario;
import static Sistema.MainSistema.conn;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nicolás
 */
public class pnlUsuario extends javax.swing.JPanel {

    /**
     * Creates new form pnlUsuario
     */
    public pnlUsuario() {
        try {
            initComponents();
            cargarTabla();
            cargarEmpresas();
            vistaDefault();
        } catch (SQLException ex) {
            Logger.getLogger(pnlUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        pnlBusqueda = new javax.swing.JPanel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        lblRespuestaBuscar = new javax.swing.JLabel();
        pnUsuario = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtRun = new javax.swing.JTextField();
        txtApellidoP = new javax.swing.JTextField();
        txtApellidoM = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblRespuestaUsuario = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        ddlSexo = new javax.swing.JComboBox<>();
        pnCredencial = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ddlCargo = new javax.swing.JComboBox<>();
        txtPass = new javax.swing.JPasswordField();
        btnVerificar = new javax.swing.JButton();
        cldFechaNac = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        ddlEmpresa = new javax.swing.JComboBox<>();
        ddlSucursal = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblRutRespuesta = new javax.swing.JLabel();
        btnNewUsuario = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();

        btnModificar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        pnlBusqueda.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255), 3), "Búsqueda", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        txtBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtBuscar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBuscar.setText("Ingrese Nombre de Usuario");
        txtBuscar.setToolTipText("");
        txtBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBuscarMouseClicked(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBusquedaLayout = new javax.swing.GroupLayout(pnlBusqueda);
        pnlBusqueda.setLayout(pnlBusquedaLayout);
        pnlBusquedaLayout.setHorizontalGroup(
            pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBusquedaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtBuscar)
                .addContainerGap())
            .addGroup(pnlBusquedaLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(btnBuscar)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        pnlBusquedaLayout.setVerticalGroup(
            pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBusquedaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(btnBuscar)
                .addContainerGap())
        );

        lblRespuestaBuscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRespuestaBuscar.setForeground(java.awt.Color.red);
        lblRespuestaBuscar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRespuestaBuscar.setText("Respuesta");

        pnUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255), 3), "Usuario", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Nombre");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Apellido Paterno:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Apellido Materno:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Sexo:");

        txtRun.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtRun.setToolTipText("Formato: \"11111111-1\"");
        txtRun.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRunKeyTyped(evt);
            }
        });

        txtApellidoP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtApellidoP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoPKeyTyped(evt);
            }
        });

        txtApellidoM.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtApellidoM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoMKeyTyped(evt);
            }
        });

        btnAgregar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAgregar.setText("Guardar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblRespuestaUsuario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRespuestaUsuario.setForeground(java.awt.Color.red);
        lblRespuestaUsuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRespuestaUsuario.setText("Respuesta");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Fecha de Nacimiento");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Email:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Run:");

        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmailKeyTyped(evt);
            }
        });

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        ddlSexo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ddlSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Sexo", "Hombre", "Mujer" }));

        pnCredencial.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 255)), "Credenciales", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Nombre de Usuario:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Contraseña:");

        txtUser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Cargo");

        ddlCargo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ddlCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el Cargo", "Administrador", "Gerente de Asociación", "Encargado de Tienda" }));
        ddlCargo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ddlCargoItemStateChanged(evt);
            }
        });

        txtPass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPassKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnCredencialLayout = new javax.swing.GroupLayout(pnCredencial);
        pnCredencial.setLayout(pnCredencialLayout);
        pnCredencialLayout.setHorizontalGroup(
            pnCredencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCredencialLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCredencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(pnCredencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPass, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                    .addComponent(txtUser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addGroup(pnCredencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCredencialLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(144, 144, 144))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCredencialLayout.createSequentialGroup()
                        .addComponent(ddlCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))))
        );
        pnCredencialLayout.setVerticalGroup(
            pnCredencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCredencialLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCredencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGroup(pnCredencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCredencialLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(pnCredencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnCredencialLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ddlCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        btnVerificar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnVerificar.setText("Verificar");
        btnVerificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerificarActionPerformed(evt);
            }
        });

        cldFechaNac.setMinSelectableDate(new java.util.Date(-62135751533000L));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255)), "Lugar de Trabajo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        ddlEmpresa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ddlEmpresa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione la empresa" }));
        ddlEmpresa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ddlEmpresaItemStateChanged(evt);
            }
        });

        ddlSucursal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ddlSucursal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione la Sucursal" }));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Empresa");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Sucursal");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ddlEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ddlSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(117, 117, 117))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ddlEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ddlSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        lblRutRespuesta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRutRespuesta.setForeground(java.awt.Color.red);
        lblRutRespuesta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRutRespuesta.setText("Respuesta");

        javax.swing.GroupLayout pnUsuarioLayout = new javax.swing.GroupLayout(pnUsuario);
        pnUsuario.setLayout(pnUsuarioLayout);
        pnUsuarioLayout.setHorizontalGroup(
            pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnUsuarioLayout.createSequentialGroup()
                .addContainerGap(135, Short.MAX_VALUE)
                .addComponent(lblRespuestaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134))
            .addGroup(pnUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnUsuarioLayout.createSequentialGroup()
                        .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel10))
                        .addGap(75, 75, 75)
                        .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnUsuarioLayout.createSequentialGroup()
                                .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnUsuarioLayout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnUsuarioLayout.createSequentialGroup()
                                        .addComponent(txtRun, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(btnVerificar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnUsuarioLayout.createSequentialGroup()
                                .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtApellidoP, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ddlSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtApellidoM, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cldFechaNac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(62, 62, 62))))
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addGroup(pnUsuarioLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(180, 180, 180))))
            .addGroup(pnUsuarioLayout.createSequentialGroup()
                .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnUsuarioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9))
                    .addGroup(pnUsuarioLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnCredencial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnUsuarioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblRutRespuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnUsuarioLayout.setVerticalGroup(
            pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnUsuarioLayout.createSequentialGroup()
                .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnUsuarioLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtRun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnUsuarioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnVerificar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRutRespuesta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(22, 22, 22)
                .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtApellidoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cldFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtApellidoM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(ddlSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pnCredencial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblRespuestaUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        btnNewUsuario.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnNewUsuario.setText("Nueva Usuario");
        btnNewUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewUsuarioActionPerformed(evt);
            }
        });

        tablaUsuarios = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tablaUsuarios.setBackground(new java.awt.Color(240, 240, 240));
        tablaUsuarios.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaUsuarios);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(btnNewUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(117, 117, 117)
                                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(130, 130, 130)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(244, 244, 244)
                                .addComponent(lblRespuestaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 20, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(pnUsuario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNewUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pnlBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(lblRespuestaBuscar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Función que habilita los campos para modificar la información asociada al usuario
     * @param evt Evento que se produce al presionar el botón Modificar
     */
    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        txtNombre.setEnabled(true);
        txtApellidoP.setEnabled(true);
        txtApellidoM.setEnabled(true);
        txtEmail.setEnabled(true);
        txtPass.setEnabled(true);
        ddlCargo.setEnabled(true);
        btnNewUsuario.setEnabled(false);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnAgregar.setEnabled(true);
        btnCancelar.setEnabled(true);
        
        switch (ddlCargo.getSelectedIndex()) {
            case 0:
                ddlEmpresa.setEnabled(false);
                ddlSucursal.setEnabled(false);
                break;
            case 1:
                ddlEmpresa.setEnabled(false);
                ddlSucursal.setEnabled(false);
                break;
            case 2:
                ddlEmpresa.setEnabled(true);
                ddlSucursal.setEnabled(false);
                break;
            default:
                ddlEmpresa.setEnabled(true);
                ddlSucursal.setEnabled(true);
                break;
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    /**
     * Función que ejecuta la eliminación del usuario seleccionado.
     * @param evt Evento que se produce al presionar el botón Eliminar
     */
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        Usuario usu = new Usuario();
        usu.setUsername(txtUser.getText());
        int respuesta = 0;
        int a = JOptionPane.showConfirmDialog(null, "¿Desea Eliminar este Usuario?", "Message",  JOptionPane.YES_NO_OPTION);
        if(a == 0){
            respuesta = usu.eliminar(conn);
            if(respuesta == 1){
                JOptionPane.showMessageDialog(null,"El Usuario fue Eliminada",null, JOptionPane.INFORMATION_MESSAGE, null);
                try {
                    cargarTabla();
                    vistaDefault();
                } catch (SQLException ex) {
                    Logger.getLogger(pnlUsuario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(null,"Error al Eliminar",null, JOptionPane.INFORMATION_MESSAGE, null);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * Función que limpia el campo de texto de la busqueda
     * @param evt Evento que se produce al hacer clic en el campo de texto de buscar
     */
    private void txtBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarMouseClicked
        txtBuscar.setText("");
    }//GEN-LAST:event_txtBuscarMouseClicked

    /**
     * Función que llama al método de busqueda del suaurio acorde al Nombre de Usuario a buscar
     * @param evt Evento que se produce al presionar el botón Buscar
     */
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarUsuario();
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * Función que restringe los caracteres no asociados al Run
     * @param evt Evento que se produce al insertar un caracter
     */
    private void txtRunKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRunKeyTyped
        if(txtRun.getText().length()>=10){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
        if(!Character.isDigit(evt.getKeyChar()) && txtRun.getText().length() < 7){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
        if(!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != 'k' && evt.getKeyChar() != 'K' && txtRun.getText().length() >= 7 && evt.getKeyChar() != '-'){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtRunKeyTyped

    /**
     * Función que restringe los caracteres no asociados al apellido paterno
     * @param evt Evento que se produce al insertar un caracter
     */
    private void txtApellidoPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoPKeyTyped
        if(txtApellidoP.getText().length()>=100){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
        if(!Character.isAlphabetic(evt.getKeyChar())){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtApellidoPKeyTyped

    /**
     * Función que restringe los caracteres no asociados al apellido materno
     * @param evt Evento que se produce al insertar un caracter
     */
    private void txtApellidoMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoMKeyTyped
        if(txtApellidoM.getText().length()>=13){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
        if(!Character.isAlphabetic(evt.getKeyChar())){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtApellidoMKeyTyped

    /**
     * Función que permite agregar o modificar la información asociada a los campos habilitados
     * @param evt Evento que se produce al apretar el botón guardar
     */
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        Usuario usu = new Usuario();
        usu.setUsername(txtUser.getText());
        usu.setPassword(txtPass.getText());
        usu.setPerfil(obtenerCargo());
        Persona per = new Persona();
        per.setRun(txtRun.getText());
        per.setNombre(txtNombre.getText());
        per.setApellidoP(txtApellidoP.getText());
        per.setApellidoM(txtApellidoM.getText());
        per.setSexo(ddlSexo.getSelectedItem().toString());
        per.setEmail(txtEmail.getText());
        per.setFec_nac(cldFechaNac.getDate());
        Empleado emp = new Empleado();
        emp.setCargo(ddlCargo.getSelectedItem().toString());
        emp.setRun(txtRun.getText());
        emp.setUsername(txtUser.getText());
        
        if (ddlSucursal.isEnabled()) {
            try{
                Sucursal suc = (Sucursal)ddlSucursal.getModel().getSelectedItem();
                emp.setId_referencia(suc.getId_sucur());
            }catch(Exception e){
                
            }
        }else if (ddlEmpresa.isEnabled()) {
            try{
                Empresa em = (Empresa)ddlEmpresa.getModel().getSelectedItem();
                emp.setId_referencia(Integer.parseInt(em.getRut().substring(0, 8)));
            }catch(Exception e){
                
            }
        }else{
            emp.setId_referencia(0);
        }
        
        int respuesta1 = 0;
        int respuesta2 = 1;
        int respuesta3 = 1;

        if (validadorCampos()){
            if (txtUser.isEnabled()) {
                int a = JOptionPane.showConfirmDialog(null, "¿Desea Registrar este Usuario?", "Message",  JOptionPane.YES_NO_OPTION);
                if (a == 0) {
                    if (txtNombre.isEnabled()) {
                        respuesta2 = per.agregar(conn);
                    }
                    respuesta1 = usu.agregar(conn);
                    if (respuesta1 == 1) {
                        respuesta3 = emp.agregar(conn);
                    }
                    if (respuesta1 == 1 && respuesta2 == 1 && respuesta3 == 1) {
                        JOptionPane.showMessageDialog(null,"El Usuario fue Registrado",null, JOptionPane.INFORMATION_MESSAGE, null);
                        try {
                            cargarTabla();
                            vistaDefault();
                        } catch (SQLException ex) {
                            Logger.getLogger(pnlUsuario.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else{
                        JOptionPane.showMessageDialog(null,"El Nombre de Usuario ya fue Registrado",null, JOptionPane.ERROR_MESSAGE, null);
                    }
                }
            }else {
                int a = JOptionPane.showConfirmDialog(null, "¿Desea Modificar este Usuario?", "Message", JOptionPane.YES_NO_OPTION);
                if (a == 0) {
                    respuesta1 = usu.modificar(conn);
                    respuesta2 = per.modificar(conn);
                    respuesta3 = emp.modificar(conn);
                    if (respuesta1 == 1 && respuesta2 == 1 && respuesta3 == 1) {
                        JOptionPane.showMessageDialog(null, "El Usuario fue Modificada", null, JOptionPane.INFORMATION_MESSAGE, null);
                        try {
                            cargarTabla();
                            vistaDefault();
                        } catch (SQLException ex) {
                            Logger.getLogger(pnlUsuario.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Ocurrio un error al Modificar", null, JOptionPane.ERROR_MESSAGE, null);
                    }
                }
            }
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    /**
     * Función que llama al método de la vista por default para establecer todos los campos por defecto
     * @param evt Evento que se produce al presionar el botón cancelar
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        vistaDefault();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * Función que restringe los caracteres no asociados al email
     * @param evt Evento que se produce al insertar un caracter
     */
    private void txtEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyTyped
        if(txtNombre.getText().length()>=35){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtEmailKeyTyped

    /**
     * Función que restringe los caracteres no asociados al nombre
     * @param evt Evento que se produce al insertar un caracter
     */
    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        if(txtNombre.getText().length()>=25){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
        if(!Character.isAlphabetic(evt.getKeyChar())){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    /**
     * Función que restringe los caracteres no asociados al nombre de usuario
     * @param evt Evento que se produce al insertar un caracter
     */
    private void txtUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyTyped
        if(txtUser.getText().length()>=25){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
        if(!Character.isLetter(evt.getKeyChar()) || !Character.isDigit(evt.getKeyChar())){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtUserKeyTyped

    /**
     * Función que verifica si el Run entregado es válido y verifica si esta asociada la información con la base de datos
     * La cual si encuentra información asociada a un empleado, entrega un mensaje informando que se encuentra registrado,
     * en caso contrario, habilita los campos y transfiere información a los campos correspondientes
     * @param evt Evento que se produce al presionar el botón Verificar
     */
    private void btnVerificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerificarActionPerformed
        if (validarRun(txtRun.getText())) {
            Empleado emp = new Empleado();
            emp.buscarEmpleado(txtRun.getText(), conn);
            if (!emp.getUsername().equals("ERROR")) {
                JOptionPane.showMessageDialog(null,"El empleado con Run: " + emp.getRun() + " tiene asociado el usuario: " + emp.getUsername(),null, JOptionPane.INFORMATION_MESSAGE, null);
            }else{
                Persona per = new Persona();
                per = per.buscarPersona(txtRun.getText(), conn);
                txtRun.setEnabled(false);
                btnVerificar.setEnabled(false);
                lblRespuestaUsuario.setText("");
                lblRutRespuesta.setText("");
                if (per.getNombre().equals("ERROR")) {
                    txtNombre.setEnabled(true);
                    txtApellidoP.setEnabled(true);
                    txtApellidoM.setEnabled(true);
                    txtEmail.setEnabled(true);
                    cldFechaNac.setEnabled(true);
                    ddlSexo.setEnabled(true);
                    ddlCargo.setEnabled(true);
                    txtUser.setEnabled(true);
                    txtPass.setEnabled(true);
                    btnAgregar.setEnabled(true);
                    btnCancelar.setEnabled(true);
                }else{
                    txtNombre.setText(per.getNombre());
                    txtApellidoP.setText(per.getApellidoP());
                    txtApellidoM.setText(per.getApellidoM());
                    txtEmail.setText(per.getEmail());
                    cldFechaNac.setDate(per.getFec_nac());
                    ddlSexo.setSelectedItem((String) per.getSexo());
                    ddlCargo.setEnabled(true);
                    txtUser.setEnabled(true);
                    txtPass.setEnabled(true);
                    btnAgregar.setEnabled(true);
                    btnCancelar.setEnabled(true);
                }
            }
        }else{
            if (lblRutRespuesta.getText().length() == 0) {
                lblRutRespuesta.setText("El Run es Incorrecto");
            }
        }
    }//GEN-LAST:event_btnVerificarActionPerformed

    /**
     * Función que habilita el campo de Run para su posterior verificación
     * @param evt Evento que se produce al presionar Nuevo Usuario
     */
    private void btnNewUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewUsuarioActionPerformed
        vistaDefault();
        txtRun.setEnabled(true);
        btnVerificar.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnNewUsuario.setEnabled(false);
        txtRun.requestFocus();
    }//GEN-LAST:event_btnNewUsuarioActionPerformed

    /**
     * Función que toma el valor del Nombre de Usuario asociado a la fila seleccionada de la tabla
     * @param evt Evento que se produce al seleccionar una fila
     */
    private void tablaUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaUsuariosMouseClicked
        int seleccion = tablaUsuarios.getSelectedRow();
        String username = (String) tablaUsuarios.getModel().getValueAt(seleccion, 0);
        txtBuscar.setText(username);
        buscarUsuario();
    }//GEN-LAST:event_tablaUsuariosMouseClicked

    private void ddlCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddlCargoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddlCargoActionPerformed

    /**
     * Función que restringe los caracteres no asociados a la dirección
     * @param evt Evento que se produce al insertar un caracter
     */
    private void txtPassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyTyped
        if(txtPass.getText().length()>=15){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
        if(!Character.isAlphabetic(evt.getKeyChar()) || !Character.isDigit(evt.getKeyChar())){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtPassKeyTyped

    /**
     * Función que habilita y desabilita los Combobox correspondientes al cargo asignado
     * @param evt Evento que se produce al cambiar la selección del cargo
     */
    private void ddlCargoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ddlCargoItemStateChanged
        switch (ddlCargo.getSelectedIndex()) {
            case 0:
                ddlEmpresa.setEnabled(false);
                ddlSucursal.setEnabled(false);
                break;
            case 1:
                ddlEmpresa.setEnabled(false);
                ddlSucursal.setEnabled(false);
                break;
            case 2:
                ddlEmpresa.setEnabled(true);
                ddlSucursal.setEnabled(false);
                break;
            default:
                ddlEmpresa.setEnabled(true);
                ddlSucursal.setEnabled(true);
                break;
        }
    }//GEN-LAST:event_ddlCargoItemStateChanged

    /**
     * Función que habilita y desabilita al combobox de sucursales, el cual llama al método de cargarSucursales para obtener su información a la empresa asociada
     * @param evt Evento que se produce al cambiar la selección de la empresa
     */
    private void ddlEmpresaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ddlEmpresaItemStateChanged
        if (ddlEmpresa.getSelectedIndex() != 0) {
            Empresa emp = (Empresa) ddlEmpresa.getModel().getSelectedItem();
            try {
                cargarSucursales(emp.getRut());
            } catch (SQLException ex) {
                Logger.getLogger(pnlUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            ddlSucursal.removeAllItems();
            ddlSucursal.addItem("Seleccione la Sucursal");
        } 
    }//GEN-LAST:event_ddlEmpresaItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNewUsuario;
    private javax.swing.JButton btnVerificar;
    private com.toedter.calendar.JDateChooser cldFechaNac;
    private javax.swing.JComboBox<Object> ddlCargo;
    private javax.swing.JComboBox<Object> ddlEmpresa;
    private javax.swing.JComboBox<String> ddlSexo;
    private javax.swing.JComboBox<Object> ddlSucursal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRespuestaBuscar;
    private javax.swing.JLabel lblRespuestaUsuario;
    private javax.swing.JLabel lblRutRespuesta;
    private javax.swing.JPanel pnCredencial;
    private javax.swing.JPanel pnUsuario;
    private javax.swing.JPanel pnlBusqueda;
    private javax.swing.JTable tablaUsuarios;
    private javax.swing.JTextField txtApellidoM;
    private javax.swing.JTextField txtApellidoP;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtRun;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

    /**
     * Método que deja todos los campos por defecto
     */
    private void vistaDefault() {
        Calendar fecha = Calendar.getInstance();
        fecha.setTime(new Date());
        fecha.add(Calendar.YEAR, -18);
        txtRun.setEnabled(false);
        txtNombre.setEnabled(false);
        txtApellidoP.setEnabled(false);
        txtApellidoM.setEnabled(false);
        txtEmail.setEnabled(false);
        cldFechaNac.setEnabled(false);
        ddlSexo.setEnabled(false);
        ddlCargo.setEnabled(false);
        txtUser.setEnabled(false);
        txtPass.setEnabled(false);
        btnVerificar.setEnabled(false);
        btnAgregar.setEnabled(false);
        btnCancelar.setEnabled(false);
        cldFechaNac.setMaxSelectableDate(fecha.getTime());
        ddlEmpresa.setEnabled(false);
        ddlSucursal.setEnabled(false);
        ddlSucursal.removeAllItems();
        ddlSucursal.addItem("Seleccione la Sucursal");
        
        btnNewUsuario.setEnabled(true);
        btnEliminar.setEnabled(false);
        btnModificar.setEnabled(false);
        txtRun.setText("");
        txtNombre.setText("");
        txtApellidoP.setText("");
        txtApellidoM.setText("");
        txtEmail.setText("");
        ddlCargo.setSelectedIndex(0);
        ddlSexo.setSelectedIndex(0);
        ddlEmpresa.setSelectedIndex(0);
        ddlSucursal.setSelectedIndex(0);
        cldFechaNac.setDate(fecha.getTime());
        txtUser.setText("");
        txtPass.setText("");
        txtBuscar.setText("Ingrese Nombre de Usuario");
        lblRespuestaBuscar.setText("");
        lblRespuestaUsuario.setText("");
        lblRutRespuesta.setText("");
    }

    /**
     * Método que carga la información de la tabla con el registro de los usuarios empleados
     * @throws SQLException 
     */
    private void cargarTabla() throws SQLException {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre de Usuario");
        modelo.addColumn("Perfil");

        Usuario usu = new Usuario();
        ResultSet rs = usu.listadoUsuarios(conn);
        Object[] fila = new Object[2];
        while (rs.next()) {
            fila[0] = rs.getString("USERNAME");
            fila[1] = rs.getString("PERFIL");
            modelo.addRow(fila);
        }

        tablaUsuarios.setModel(modelo);
        tablaUsuarios.setVisible(true);
    }

    /**
     * Método que busca al usuario y transfiere la información a los campos asociados.
     */
    private void buscarUsuario() {
        Usuario usu = new Usuario();
        usu = usu.buscar(txtBuscar.getText(), conn);
        if(!usu.getUsername().equals("ERROR")){
            vistaDefault();
            Persona per = new Persona();
            per = per.buscarPersonaUser(usu.getUsername(), conn);
            txtBuscar.setText(usu.getUsername());
            Empleado emp = new Empleado();
            emp.buscarEmpleado(per.getRun(), conn);
            
            txtUser.setText(usu.getUsername());
            txtPass.setText(usu.getPassword());
            ddlCargo.setSelectedItem(emp.getCargo());
            
            if (ddlCargo.getSelectedIndex() == 2) {
                Empresa em = new Empresa();
                em = em.buscarRef(Integer.toString(emp.getId_referencia()), conn);
                ddlEmpresa.getModel().setSelectedItem(em);
            }else if(ddlCargo.getSelectedIndex() == 3){
                Empresa em = new Empresa();
                Sucursal suc = new Sucursal();
                suc = suc.buscar(emp.getId_referencia(), conn);
                em = em.buscar(suc.getEmpresaRut(), conn);
                ddlEmpresa.getModel().setSelectedItem(em);
                ddlSucursal.getModel().setSelectedItem(suc);
            }
            
            ddlEmpresa.setEnabled(false);
            ddlSucursal.setEnabled(false);
            
            txtRun.setText(per.getRun());
            txtNombre.setText(per.getNombre());
            txtApellidoP.setText(per.getApellidoP());
            txtApellidoM.setText(per.getApellidoM());
            txtEmail.setText(per.getEmail());
            ddlSexo.setSelectedItem(per.getSexo());
            cldFechaNac.setDate(per.getFec_nac());
            
            btnNewUsuario.setEnabled(true);
            btnModificar.setEnabled(true);
            btnEliminar.setEnabled(true);
        }else if(txtNombre.getText().equals("Ingrese Nombre de Usuario")){
            vistaDefault();
            lblRespuestaBuscar.setText("Ingrese Nombre de Usuario antes de Buscar");
        }else{
            lblRespuestaBuscar.setText("No hay registros del Usuario: " + txtBuscar.getText());
            vistaDefault();
        }
    }

    /**
     * Método que  establece el cargo asignado para el perfil del usuario empleado
     * @return String con el nombre del perfil del cargo
     */
    private String obtenerCargo() {
        String cargo = "";
        switch (ddlCargo.getSelectedIndex()) {
            case 1:
                cargo = "ADMINISTRADOR";
                break;
            case 2:
                cargo = "GERENTE";
                break;
            case 3:
                cargo = "ENCARGADO";
                break;
            default:
                cargo = "";
                break;
        }
        return cargo;
    }
    
    /**
     * Método que valida el run entregado
     * @param run Run entregado como parametro
     * @return Boolean correspondiente si es o no valido el run
     */
    private boolean validarRun(String run) {
        boolean validacion = false;
        boolean isRut = run.matches("^[0-9]+[-|‐]{1}[0-9kK]{1}$");
        if (!isRut) {
            lblRutRespuesta.setText("El Formato del Rut es Incorrecto");
            return false;
        }
        lblRutRespuesta.setText("");
        try {
            run =  run.toUpperCase();
            run = run.replace(".", "");
            run = run.replace("-", "");
            int rutAux = Integer.parseInt(run.substring(0, run.length() - 1));
            if (rutAux == 0) {
                return validacion;
            }

            char dv = run.charAt(run.length() - 1);

            int m = 0, s = 1;
            for (; rutAux != 0; rutAux /= 10) {
                s = (s + rutAux % 10 * (9 - m++ % 6)) % 11;
            }
            if (dv == (char) (s != 0 ? s + 47 : 75)) {
                validacion = true;
            }

        } catch (java.lang.NumberFormatException e) {
        } catch (Exception e) {
        }
        return validacion;
    }

    /**
     * Método que valida que los campos no estén vacios
     * @return Boolean que corresponde si hay o no campos vacios
     */
    private boolean validadorCampos() {
        boolean validar = true;
        if (txtNombre.getText().trim().isEmpty()) {
            lblRespuestaUsuario.setText("Ingrese el Nombre del empleado");
            validar = false;
        }
        if (txtApellidoP.getText().trim().isEmpty()) {
            lblRespuestaUsuario.setText("Ingrese el Apellido Paterno del empleado");
            validar = false;
        }
        if (ddlSexo.getSelectedIndex() == 0) {
            lblRespuestaUsuario.setText("Seleccione el Sexo");
            validar = false;
        }
        if (txtUser.getText().trim().isEmpty()) {
            lblRespuestaUsuario.setText("Ingrese el Nombre de Usuario");
            validar = false;
        }
        if (txtPass.getText().trim().isEmpty()) {
            lblRespuestaUsuario.setText("Ingrese la Contraseña");
            validar = false;
        }
        if (ddlCargo.getSelectedIndex()==0) {
            lblRespuestaUsuario.setText("Seleccione el cargo");
            validar = false;
        }
        if (ddlEmpresa.isEnabled()) {
            if (ddlEmpresa.getSelectedIndex()==0) {
                lblRespuestaUsuario.setText("Seleccione la Empresa");
                validar = false;
            }
        }
        if (ddlSucursal.isEnabled()) {
            if (ddlSucursal.getSelectedIndex()==0) {
                lblRespuestaUsuario.setText("Seleccione el cargo");
                validar = false;
            }
        }
        if (txtEmail.getText().length() > 0) {
            String email = txtEmail.getText();
            boolean isEmail = email.matches("^[_aA-zZ0-9-]+(\\.[_aA-zZ0-9-]+)*@" +
                                            "[aA-zZ0-9-]+(\\.[aA-zZ0-9-]+)*(\\.[aA-zZ]{2,4})$");
            if (!isEmail) {
                lblRespuestaUsuario.setText("El email es Incorrecto");
                validar = false;
            }
        }
        return validar;
    }

    /**
     * Método que carga la información del combobox de empresas con la información registrada en la base de datos
     * @throws SQLException 
     */
    private void cargarEmpresas() throws SQLException {
        Empresa emp = new Empresa();
        ResultSet rs = emp.listadoEmpresas(conn);
        while (rs.next()) {
            Empresa v_emp = new Empresa();
            v_emp.setRut(rs.getString("RUT"));
            v_emp.setNombre(rs.getString("NOMBRE"));
            v_emp.setDireccion(rs.getString("DIRECCION"));
            v_emp.setRazon_social(rs.getString("RAZON_SOCIAL"));
            ddlEmpresa.addItem(v_emp);
        }
    }
    
    /**
     * Método que carga la información del combobox de sucursales con la información asociada al rut de la empresa seleccionada
     * @param rut Rut asociado a la empresa seleccionada
     * @throws SQLException 
     */
    private void cargarSucursales(String rut) throws SQLException {
        ddlSucursal.removeAllItems();
        ddlSucursal.addItem("Seleccione la Sucursal");
        Sucursal suc = new Sucursal();
        ResultSet rs = suc.listadoSucursalesFiltro(conn, rut);
        while (rs.next()) {
            Sucursal v_suc = new Sucursal();
            v_suc.setId_sucur(rs.getInt("ID_SUCUR"));
            v_suc.setNombre(rs.getString("NOMBRE"));
            v_suc.setDireccion(rs.getString("DIRECCION"));
            v_suc.setComuna(rs.getString("COMUNA"));
            v_suc.setEmpresaRut(rs.getString("EMPRESA_RUT"));
            ddlSucursal.addItem(v_suc);
        }
    }


}
