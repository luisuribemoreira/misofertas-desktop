/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pnlsAdministrador;

import MisPaquetes.Certificado;
import MisPaquetes.Empresa;
import MisPaquetes.Sucursal;
import static Sistema.MainSistema.conn;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nicolás
 */
public class pnlDescuento extends javax.swing.JPanel {

    /**
     * Creates new form pnlSucursal
     */
    public pnlDescuento() {
        try {
            initComponents();
            cargarTabla();
            vistaDefault();
        } catch (SQLException ex) {
            Logger.getLogger(pnlDescuento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNewCertificado = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCertificados = new javax.swing.JTable();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        pnlBusqueda = new javax.swing.JPanel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        lblRespuestaBuscar = new javax.swing.JLabel();
        pnSucursal = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPtsMin = new javax.swing.JTextField();
        txtPtsMax = new javax.swing.JTextField();
        txtDescuento = new javax.swing.JTextField();
        txtTope = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ddlRubro = new javax.swing.JComboBox<>();
        lblRespuestaCertificado = new javax.swing.JLabel();

        btnNewCertificado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnNewCertificado.setText("Nueva Sucursal");
        btnNewCertificado.setActionCommand("Nuevo Certificado");
        btnNewCertificado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewCertificadoActionPerformed(evt);
            }
        });

        tablaCertificados.setBackground(new java.awt.Color(240, 240, 240));
        tablaCertificados.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tablaCertificados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaCertificados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCertificadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCertificados);

        btnModificar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        pnlBusqueda.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255), 3), "Búsqueda", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        txtBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtBuscar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBuscar.setText("Ingrese ID del Certificado");
        txtBuscar.setToolTipText("");
        txtBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBuscarMouseClicked(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBusquedaLayout = new javax.swing.GroupLayout(pnlBusqueda);
        pnlBusqueda.setLayout(pnlBusquedaLayout);
        pnlBusquedaLayout.setHorizontalGroup(
            pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBusquedaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtBuscar)
                .addContainerGap())
            .addGroup(pnlBusquedaLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(btnBuscar)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        pnlBusquedaLayout.setVerticalGroup(
            pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBusquedaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(btnBuscar)
                .addContainerGap())
        );

        lblRespuestaBuscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRespuestaBuscar.setForeground(java.awt.Color.red);
        lblRespuestaBuscar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRespuestaBuscar.setText("Respuesta");

        pnSucursal.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255), 3), "Certificado", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Puntos Mínimos:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Puntos Máximos:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Descuento:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Tope:");

        txtPtsMin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPtsMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPtsMinKeyTyped(evt);
            }
        });

        txtPtsMax.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPtsMax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPtsMaxKeyTyped(evt);
            }
        });

        txtDescuento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescuentoKeyTyped(evt);
            }
        });

        txtTope.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTope.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTopeKeyTyped(evt);
            }
        });

        btnAgregar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAgregar.setText("Guardar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("ID Certificado");

        txtId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtId.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Rubro:");

        ddlRubro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ddlRubro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el rubro", "Alimento", "Electronica", "Linea Blanca", "Vestuario", "Calzado" }));

        lblRespuestaCertificado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRespuestaCertificado.setForeground(java.awt.Color.red);
        lblRespuestaCertificado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRespuestaCertificado.setText("Respuesta");

        javax.swing.GroupLayout pnSucursalLayout = new javax.swing.GroupLayout(pnSucursal);
        pnSucursal.setLayout(pnSucursalLayout);
        pnSucursalLayout.setHorizontalGroup(
            pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSucursalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnSucursalLayout.createSequentialGroup()
                        .addGroup(pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnSucursalLayout.createSequentialGroup()
                                .addGroup(pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTope, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ddlRubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnSucursalLayout.createSequentialGroup()
                                .addGroup(pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPtsMax, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                    .addComponent(txtPtsMin))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnSucursalLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(92, 92, 92))))
                    .addGroup(pnSucursalLayout.createSequentialGroup()
                        .addGroup(pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(pnSucursalLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblRespuestaCertificado, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnSucursalLayout.createSequentialGroup()
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnSucursalLayout.setVerticalGroup(
            pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSucursalLayout.createSequentialGroup()
                .addGroup(pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnSucursalLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPtsMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(pnSucursalLayout.createSequentialGroup()
                                .addComponent(txtPtsMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(20, 20, 20)
                                .addGroup(pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtTope, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(ddlRubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(pnSucursalLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRespuestaCertificado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(pnSucursalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(pnSucursal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(btnNewCertificado, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblRespuestaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNewCertificado, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRespuestaBuscar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Función que se produce al apretar el boton "NewCertificado" el cual habilita los campos para su registro
     * @param evt Evento que se produce al apretar el botón
     */
    private void btnNewCertificadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewCertificadoActionPerformed
        vistaDefault();
        txtPtsMax.setEnabled(true);
        txtPtsMin.setEnabled(true);
        txtDescuento.setEnabled(true);
        txtTope.setEnabled(true);
        ddlRubro.setEnabled(true);
        btnAgregar.setEnabled(true);
        btnCancelar.setEnabled(true);
        txtPtsMin.requestFocus();
    }//GEN-LAST:event_btnNewCertificadoActionPerformed

    /**
     * Función que se produce la hacer clic en la tabla certificado para realizar su busqueda a la fila seleccionada
     * @param evt evento que se produce al dar clic en alguna fila de la tabla
     */
    private void tablaCertificadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCertificadosMouseClicked
        int seleccion = tablaCertificados.getSelectedRow();
        int idSelect = (int) tablaCertificados.getModel().getValueAt(seleccion, 0);
        txtBuscar.setText(String.valueOf(idSelect));
        buscarCertificado();
    }//GEN-LAST:event_tablaCertificadosMouseClicked

    /**
     * Función que se produce al apretar el boton "Modificar" el cual habilita los campos para modificar la información
     * @param evt Evento que se produce al apretar el botón
     */
    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        txtPtsMax.setEnabled(true);
        txtPtsMin.setEnabled(true);
        txtDescuento.setEnabled(true);
        txtTope.setEnabled(true);
        ddlRubro.setEnabled(true);
        btnAgregar.setEnabled(true);
        btnCancelar.setEnabled(true);
    }//GEN-LAST:event_btnModificarActionPerformed

    /**
     * Función que se produce al apretar el boton "Eliminar" el cual ejecuta la acción de eliminar la información seleccionada
     * @param evt Evento que se produce al apretar el botón
     */
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        Certificado cer = new Certificado();
        cer.setId_cert(Integer.parseInt(txtId.getText()));
        int respuesta = 0;
        int a = JOptionPane.showConfirmDialog(null, "¿Desea Eliminar este Certificado?", "Message",  JOptionPane.YES_NO_OPTION);
        if(a == 0){
            respuesta = cer.eliminar(conn);
            if(respuesta == 1){
                JOptionPane.showMessageDialog(null,"El Certificado fue Eliminada",null, JOptionPane.INFORMATION_MESSAGE, null);
                try {
                    cargarTabla();
                    vistaDefault();
                } catch (SQLException ex) {
                    Logger.getLogger(pnlDescuento.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(null,"Error al Eliminar",null, JOptionPane.INFORMATION_MESSAGE, null);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * Función que se produce al hacer clic en el campo de buscar el cual modifica el texto del campo buscar
     * @param evt Evento que se produce al hacer clic en el campo de buscar
     */
    private void txtBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarMouseClicked
        txtBuscar.setText("");
    }//GEN-LAST:event_txtBuscarMouseClicked

    /**
     * Función que se produce al apretar el botón buscar el cual llama al método buscarCertificado para proporcionar la información asociada
     * @param evt Evento que se produce al apretar el botón
     */
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarCertificado();
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * Función el cual permitirá restringir los caracteres correspondiente al campo de puntos mínimos
     * @param evt Evento que se produce al realizar tipeo del teclado
     */
    private void txtPtsMinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPtsMinKeyTyped
        if(txtPtsMin.getText().length()>=4){
            evt.consume();
        }
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtPtsMinKeyTyped

    /**
     * Función el cual permitirá restringir los caracteres correspondiente al campo de puntos máximos
     * @param evt Evento que se produce al realizar tipeo del teclado
     */
    private void txtPtsMaxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPtsMaxKeyTyped
        if(txtPtsMax.getText().length()>=4){
            evt.consume();
        }
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtPtsMaxKeyTyped

    /**
     * Función el cual permitirá restringir los caracteres correspondiente al campo de descuento
     * @param evt Evento que se produce al realizar tipeo del teclado
     */
    private void txtDescuentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescuentoKeyTyped
        if(txtDescuento.getText().length()>=2){
            evt.consume();
        }
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtDescuentoKeyTyped

    /**
     * Función el cual permitirá restringir los caracteres correspondiente al campo de tope
     * @param evt Evento que se produce al realizar tipeo del teclado
     */
    private void txtTopeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTopeKeyTyped
        if(txtTope.getText().length()>=9){
            evt.consume();
        }
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtTopeKeyTyped

    /**
     * Función que se produce al apretar el botón de "Guardar" el cual verficará y ejecutará el guardado o modificado de la información
     * Acorde a las especificaciones entregadas
     * @param evt Evento que se produce al apretar el botón guardar
     */
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        Certificado cer = new Certificado();
        cer.setPts_min(Integer.parseInt(txtPtsMin.getText()));
        cer.setPts_max(Integer.parseInt(txtPtsMax.getText()));
        cer.setDescuento(Double.parseDouble(txtDescuento.getText()));
        cer.setTope(Integer.parseInt(txtTope.getText()));
        cer.setRubro(ddlRubro.getSelectedItem().toString());
        int respuesta = 0;
        
        

        if (ddlRubro.getSelectedIndex() == 0) {
            lblRespuestaCertificado.setText("Falta Seleccionar el rubro del Certificado");
        }else if (!validadorCampos()){
            lblRespuestaCertificado.setText("Ingrese todos los datos");
        }else if(txtId.getText().equals("")){
            int a = JOptionPane.showConfirmDialog(null, "¿Desea Registrar este Certificado?", "Message",  JOptionPane.YES_NO_OPTION);
            if(a == 0){
                respuesta = cer.agregar(conn);
                if(respuesta == 1){
                    JOptionPane.showMessageDialog(null,"El Certificado fue Registrada",null, JOptionPane.INFORMATION_MESSAGE, null);
                    try {
                        cargarTabla();
                        vistaDefault();
                    } catch (SQLException ex) {
                        Logger.getLogger(pnlDescuento.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    JOptionPane.showMessageDialog(null,"El Certificado ya fue Registrada",null, JOptionPane.ERROR_MESSAGE, null);
                }
            }
        }else{
            cer.setId_cert(Integer.parseInt(txtId.getText()));
            int a = JOptionPane.showConfirmDialog(null, "¿Desea Modificar este Certificado?", "Message",  JOptionPane.YES_NO_OPTION);
            if(a == 0){
                respuesta = cer.modificar(conn);
                if(respuesta == 1){
                    JOptionPane.showMessageDialog(null,"El Certificado fue Modificada",null, JOptionPane.INFORMATION_MESSAGE, null);
                    try {
                        cargarTabla();
                        vistaDefault();
                    } catch (SQLException ex) {
                        Logger.getLogger(pnlDescuento.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    JOptionPane.showMessageDialog(null,"Ocurrio un error al Modificar",null, JOptionPane.ERROR_MESSAGE, null);
                }
            }
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    /**
     * Función que llama al método vistaDefault, para dejar todos los campos por defecto
     * @param evt 
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        vistaDefault();
    }//GEN-LAST:event_btnCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNewCertificado;
    private javax.swing.JComboBox<Object> ddlRubro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRespuestaBuscar;
    private javax.swing.JLabel lblRespuestaCertificado;
    private javax.swing.JPanel pnSucursal;
    private javax.swing.JPanel pnlBusqueda;
    private javax.swing.JTable tablaCertificados;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtPtsMax;
    private javax.swing.JTextField txtPtsMin;
    private javax.swing.JTextField txtTope;
    // End of variables declaration//GEN-END:variables

    
    /**
     * Método que carga la tabla de la interfaz con la información de los certificados registrados
     * @throws SQLException 
     */
    private void cargarTabla() throws SQLException {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Pts_min");
        modelo.addColumn("Pts_max");
        modelo.addColumn("% Descuento");
        modelo.addColumn("Tope");
        modelo.addColumn("Rubro");

        Certificado cer = new Certificado();
        ResultSet rs = cer.listadoCertificados(conn);
        Object[] fila = new Object[6];
        while (rs.next()) {
            fila[0] = rs.getInt("ID_CERT");
            fila[1] = rs.getInt("PTS_MIN");
            fila[2] = rs.getInt("PTS_MAX");
            fila[3] = rs.getDouble("DESCUENTO");
            fila[4] = rs.getInt("TOPE");
            fila[5] = rs.getString("RUBRO");
            modelo.addRow(fila);
        }

        tablaCertificados.setModel(modelo);
        tablaCertificados.setVisible(true);
    }

    /**
     * Método que deja todos los campos por defecto
     */
    private void vistaDefault() {
        
        txtPtsMax.setEnabled(false);
        txtPtsMin.setEnabled(false);
        txtDescuento.setEnabled(false);
        txtTope.setEnabled(false);
        ddlRubro.setEnabled(false);
        btnAgregar.setEnabled(false);
        btnCancelar.setEnabled(false);
        
        btnEliminar.setEnabled(false);
        btnModificar.setEnabled(false);
        txtPtsMin.setText("");
        txtPtsMax.setText("");
        txtDescuento.setText("");
        txtTope.setText("");
        ddlRubro.setSelectedIndex(0);
        txtId.setText("");
        txtBuscar.setText("Ingrese ID del Certificado");
        lblRespuestaBuscar.setText("");
        lblRespuestaCertificado.setText("");
    }

    /**
     * Método que busca la información del certificado acorde a lo especificado en el campo de texto "Buscar"
     */
    private void buscarCertificado() {
        Certificado cer = new Certificado();
        cer = cer.buscar(Integer.parseInt(txtBuscar.getText()), conn);
        if(!cer.getRubro().equals("ERROR")){
            vistaDefault();
            txtBuscar.setText(String.valueOf(cer.getId_cert()));
            txtId.setText(String.valueOf(cer.getId_cert()));
            txtPtsMin.setText(String.valueOf(cer.getPts_min()));
            txtPtsMax.setText(String.valueOf(cer.getPts_max()));
            txtDescuento.setText(String.valueOf(cer.getDescuento()));
            txtTope.setText(String.valueOf(cer.getTope()));
            
            ddlRubro.getModel().setSelectedItem(cer.getRubro());
            
            btnModificar.setEnabled(true);
            btnEliminar.setEnabled(true);
        }else if(txtPtsMin.getText().equals("Ingrese ID del Certificado")){
            vistaDefault();
            lblRespuestaBuscar.setText("Ingrese ID antes de Buscar");
        }else{
            lblRespuestaBuscar.setText("No hay registros del Certificado con ID: " + txtBuscar.getText());
            vistaDefault();
        }
    }


    /**
     * Método que valida los campos que no estén vacios
     * @return Boolean que valida si los campos están o no vacios
     */
    private boolean validadorCampos() {
        boolean validar = true;
        if (txtPtsMin.getText().trim().isEmpty()) {
            validar = false;
        }
        if (txtPtsMax.getText().isEmpty()) {
            validar = false;
        }
        if (txtDescuento.getText().isEmpty()){
            validar = false;
        }
        if (txtTope.getText().isEmpty()) {
            validar = false;
        }
        return validar;
    }


}
