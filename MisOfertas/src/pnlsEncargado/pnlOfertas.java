/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pnlsEncargado;

import MisPaquetes.EnviaCorreo;
import MisPaquetes.Oferta;
import MisPaquetes.Producto;
import MisPaquetes.Sucursal;
import static Sistema.MainSistema.conn;
import static Sistema.MainSistema.emp_conectado;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.*;
import java.io.FileInputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 
 */
public class pnlOfertas extends javax.swing.JPanel {

    
    //Atributos declarados necesarios para la conversion de la imagen
    JFileChooser seleccionado = new JFileChooser();
    File archivo = null;
    byte[] bytesImg;

    /**
     * Creates new form pnlHome
     */
    public pnlOfertas() {
        try {
            initComponents();
            cargarTabla();
            cargarComboBox();
            vistaDefault();
        } catch (SQLException ex) {
            Logger.getLogger(pnlOfertas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lblImagen = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaOfertas = new javax.swing.JTable();
        pnlOferta = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDescr = new javax.swing.JTextField();
        txtDescuento = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cldFechaInicio = new com.toedter.calendar.JDateChooser();
        ddlProducto = new javax.swing.JComboBox<>();
        cldFechaTermino = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        txtValoracion = new javax.swing.JTextField();
        ddlRubro = new javax.swing.JComboBox<>();
        btnAgregar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnBuscarImagen = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        pnlBusqueda = new javax.swing.JPanel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        lblRespuestaBuscar = new javax.swing.JLabel();
        btnNewOferta = new javax.swing.JButton();
        lblRespuestaOferta = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(842, 677));

        jScrollPane1.setViewportView(lblImagen);

        tablaOfertas = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tablaOfertas.setBackground(new java.awt.Color(240, 240, 240));
        tablaOfertas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tablaOfertas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaOfertas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaOfertasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaOfertas);

        pnlOferta.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255), 3), "Oferta", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Descripción:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Fecha Término:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Valoración Total:");

        txtDescr.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDescr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescrKeyTyped(evt);
            }
        });

        txtDescuento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescuentoKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("ID Oferta");

        txtId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtId.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Producto:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Fecha Inicio:");

        cldFechaInicio.setMaxSelectableDate(new java.util.Date(4102459276000L));
        cldFechaInicio.setMinSelectableDate(new java.util.Date(-62135751524000L));
        cldFechaInicio.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cldFechaInicioPropertyChange(evt);
            }
        });

        ddlProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el producto" }));

        cldFechaTermino.setMaxSelectableDate(new java.util.Date(4102459276000L));
        cldFechaTermino.setMinSelectableDate(new java.util.Date(-62135751524000L));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("% Descuento:");

        txtValoracion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtValoracion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValoracionKeyTyped(evt);
            }
        });

        ddlRubro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el rubro", "Alimento", "Electronica", "Linea Blanca", "Vestuario", "Calzado" }));
        ddlRubro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddlRubroActionPerformed(evt);
            }
        });

        btnAgregar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAgregar.setText("Guardar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Rubro:");

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnBuscarImagen.setText("Buscar imagen");
        btnBuscarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarImagenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlOfertaLayout = new javax.swing.GroupLayout(pnlOferta);
        pnlOferta.setLayout(pnlOfertaLayout);
        pnlOfertaLayout.setHorizontalGroup(
            pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOfertaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlOfertaLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOfertaLayout.createSequentialGroup()
                        .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlOfertaLayout.createSequentialGroup()
                                .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cldFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cldFechaTermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOfertaLayout.createSequentialGroup()
                                .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnlOfertaLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(btnBuscarImagen))
                                    .addGroup(pnlOfertaLayout.createSequentialGroup()
                                        .addComponent(txtDescr, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 192, Short.MAX_VALUE)
                                        .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(pnlOfertaLayout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(401, 401, 401))))
                    .addGroup(pnlOfertaLayout.createSequentialGroup()
                        .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(pnlOfertaLayout.createSequentialGroup()
                                    .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ddlRubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ddlProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(72, 72, 72))
                                .addGroup(pnlOfertaLayout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtValoracion, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlOfertaLayout.setVerticalGroup(
            pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOfertaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(cldFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cldFechaTermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtValoracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarImagen))
                .addGap(13, 13, 13)
                .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlOfertaLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(ddlRubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(ddlProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOfertaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlOfertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64))))
        );

        btnEliminar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        pnlBusqueda.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255), 3), "Búsqueda", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        txtBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtBuscar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBuscar.setText("Ingrese ID de Oferta");
        txtBuscar.setToolTipText("");
        txtBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBuscarMouseClicked(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBusquedaLayout = new javax.swing.GroupLayout(pnlBusqueda);
        pnlBusqueda.setLayout(pnlBusquedaLayout);
        pnlBusquedaLayout.setHorizontalGroup(
            pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBusquedaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBuscar)
                .addGap(158, 158, 158))
        );
        pnlBusquedaLayout.setVerticalGroup(
            pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBusquedaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        btnModificar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        lblRespuestaBuscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRespuestaBuscar.setForeground(java.awt.Color.red);
        lblRespuestaBuscar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRespuestaBuscar.setText("Respuesta");

        btnNewOferta.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnNewOferta.setText("Nueva Oferta");
        btnNewOferta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewOfertaActionPerformed(evt);
            }
        });

        lblRespuestaOferta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblRespuestaOferta.setForeground(java.awt.Color.red);
        lblRespuestaOferta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRespuestaOferta.setText("Respuesta");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 45, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblRespuestaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(367, 367, 367))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblRespuestaOferta, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(358, 358, 358)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pnlBusqueda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNewOferta, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(459, 459, 459)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3))
                        .addGap(25, 25, 25))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(pnlOferta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 53, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(lblRespuestaOferta, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNewOferta, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(pnlBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(lblRespuestaBuscar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlOferta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(342, 342, 342)))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Accion que evalua si el archivo que se quiere agregar es una imagen valida
     * Si el archivo es valido la imagen se mostrara en el lblImagen
     * @param evt Evento de presionar el boton buscar imagen
     */
    private void btnBuscarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarImagenActionPerformed
        // TODO add your handling code here:
        if (seleccionado.showDialog(this, "Abrir Archivo") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionado.getSelectedFile();
            if (archivo.canRead()) {
                if (archivo.getName().endsWith("jpg")||archivo.getName().endsWith("png")) {
                    bytesImg = cargarImagen(archivo);
                    lblImagen.setIcon(new ImageIcon(bytesImg));
                }else{
                    JOptionPane.showMessageDialog(null, "Por favor ingrese una imagen");
                }
                
            }
        }
    }//GEN-LAST:event_btnBuscarImagenActionPerformed

    /**
     * Funcion que busca una oferta seleccionada en la tabla de ofertas
     * @param evt Evento de seleccionar un elemento de la tabla 
     */
    private void tablaOfertasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaOfertasMouseClicked
        int seleccion = tablaOfertas.getSelectedRow();
        int idSelect = (int) tablaOfertas.getModel().getValueAt(seleccion, 0);
        txtBuscar.setText(String.valueOf(idSelect));
        buscarOferta();
    }//GEN-LAST:event_tablaOfertasMouseClicked

    /**
     * Funcion que agrega o modifica una oferta 
     * @param evt Evento de presionar el boton agregar
     */
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        try{
            if (!validadorCampos()){
                throw new Exception ("Ingrese todos los datos");
            }
            Oferta ofer = new Oferta();
            ofer.setDescripcion(txtDescr.getText());
            java.util.Date utilDate = (java.util.Date) cldFechaInicio.getDate();
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
            ofer.setFecha_inicio(sqlDate);
            utilDate = (java.util.Date) cldFechaTermino.getDate();
            sqlDate = new java.sql.Date(utilDate.getTime());
            ofer.setFecha_termino(sqlDate);
            ofer.setImagen(bytesImg);
            ofer.setValoracion_total(Integer.parseInt(txtValoracion.getText()));
            if (!validarDescuento(Integer.parseInt(txtDescuento.getText()))){
                throw new Exception ("Ingrese un porcentaje de descuento entre 1 y 100");
            }
            ofer.setPorc_descuento(Integer.parseInt(txtDescuento.getText()));
            int respuesta = 0;
            ofer.setId_sucursal(emp_conectado.getId_referencia());
            Producto pro = new Producto();
            if (ddlProducto.getSelectedIndex() != 0) {
                pro = (Producto) ddlProducto.getModel().getSelectedItem();
                ofer.setId_producto(pro.getId());
            }  
            
            if (txtId.getText().equals("")) {
                if(archivo == null){
                    throw new Exception ("Ingrese la imagen de la oferta");
                }
                int a = JOptionPane.showConfirmDialog(null, "¿Desea Registrar esta oferta?", "Message",  JOptionPane.YES_NO_OPTION);
                if (a == 0 ) {
                    respuesta = ofer.agregar(conn);
                    if(respuesta == 1){
                        JOptionPane.showMessageDialog(null,"La oferta fue registrada",null, JOptionPane.INFORMATION_MESSAGE, null);
                        EnviaCorreo env = new EnviaCorreo();
                        env.setArchi(archivo);
                        env.setOfer(ofer);
                        env.execute();
                        try {
                            cargarTabla();
                            vistaDefault();
                        } catch (SQLException ex) {
                            Logger.getLogger(pnlOfertas.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else{
                        JOptionPane.showMessageDialog(null,"La oferta ya fue registrada",null, JOptionPane.INFORMATION_MESSAGE, null);
                    }
                }

            }else{
            ofer.setId(Integer.parseInt(txtId.getText()));
            int a = JOptionPane.showConfirmDialog(null, "¿Desea Modificar esta Oferta?", "Message",  JOptionPane.YES_NO_OPTION);
            if(a == 0){
                respuesta = ofer.modificar(conn);
                if(respuesta == 1){
                    JOptionPane.showMessageDialog(null,"La Oferta fue Modificada",null, JOptionPane.INFORMATION_MESSAGE, null);
                    try {
                        cargarTabla();
                        vistaDefault();
                    } catch (SQLException ex) {
                        Logger.getLogger(pnlOfertas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    JOptionPane.showMessageDialog(null,"Ocurrio un error al Modificar",null, JOptionPane.ERROR_MESSAGE, null);
                }
            }
        }
        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null,"" + ex.getMessage(),null, JOptionPane.INFORMATION_MESSAGE, null);
        }

    }//GEN-LAST:event_btnAgregarActionPerformed

    /**
     * Funcion que cancela la operacion que se este realizando en el momento
     * @param evt Evento de presionar el boton cancelar
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        vistaDefault();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * Funcion que elimina un producto por ID
     * @param evt Evento de presionar el boton eliminar
     */
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        Oferta ofer = new Oferta();
        ofer.setId(Integer.parseInt(txtId.getText()));
        int respuesta = 0;
        int a = JOptionPane.showConfirmDialog(null, "¿Desea Eliminar esta Oferta?", "Message",  JOptionPane.YES_NO_OPTION);
        if(a == 0){
            respuesta = ofer.eliminar(conn);
            if(respuesta == 1){
                JOptionPane.showMessageDialog(null,"La Oferta fue Eliminada",null, JOptionPane.INFORMATION_MESSAGE, null);
                try {
                    cargarTabla();
                    vistaDefault();
                } catch (SQLException ex) {
                    Logger.getLogger(pnlOfertas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(null,"Error al Eliminar",null, JOptionPane.INFORMATION_MESSAGE, null);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * Funcion que limpia el campo de texto para buscar producto por ID 
     * @param evt Evento de presionar el boton buscar
     */
    private void txtBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarMouseClicked
        txtBuscar.setText("");
    }//GEN-LAST:event_txtBuscarMouseClicked

    /**
     * Funcion que se activa al momento de presionar el boton buscar
     * @param evt Evento que se activa al momento de presionar el boton buscar
     */
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarOferta();
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * Funcion que activa los campos de texto de una oferta
     * @param evt Evento de presionar el boton agregar
     */
    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        txtDescr.setEnabled(true);
        txtDescuento.setEnabled(true);
        txtValoracion.setEnabled(false);
        ddlProducto.setEnabled(true);
        ddlRubro.setEnabled(true);
        txtDescuento.setEnabled(true);
        cldFechaInicio.setEnabled(true);
        cldFechaTermino.setEnabled(true);
        btnBuscarImagen.setEnabled(true);
        btnAgregar.setEnabled(true);
        btnCancelar.setEnabled(true);
    }//GEN-LAST:event_btnModificarActionPerformed

    /**
     * Funcion que activa los campos de texto de una oferta
     * @param evt Evento de presionar el boton agregar
     */
    private void btnNewOfertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewOfertaActionPerformed
        vistaDefault();
        txtDescr.setEnabled(true);
        txtDescuento.setEnabled(true);
        txtValoracion.setEnabled(false);
        ddlRubro.setEnabled(true);
        txtDescuento.setEnabled(true);
        ddlProducto.setEnabled(true);
        cldFechaInicio.setEnabled(true);
        cldFechaTermino.setEnabled(false);
        btnBuscarImagen.setEnabled(true);
        btnAgregar.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnNewOferta.setEnabled(false);
        txtDescr.requestFocus();
    }//GEN-LAST:event_btnNewOfertaActionPerformed

    private void txtDescuentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescuentoKeyTyped
        char caracter = evt.getKeyChar();
        if(((caracter < '0') || 
        (caracter > '9')) &&
        (caracter != KeyEvent.VK_BACK_SPACE))
        {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
        
        if(txtDescuento.getText().length()>= 3){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtDescuentoKeyTyped

    /**
     * Restriccion de cantidad de caracteres para el campo de texto de descripcion de oferta
     * @param evt Evento de presionar una tecla
     */
    private void txtDescrKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescrKeyTyped
        if(txtDescr.getText().length()>= 200){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtDescrKeyTyped

    /**
     * Restriccion de caracteres, solo numericos para el campo de texto de valoracion de oferta
     * @param evt Evento de presionar una tecla
     */
    private void txtValoracionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValoracionKeyTyped
        char caracter = evt.getKeyChar();
        if(((caracter < '0') || 
        (caracter > '9')) &&
        (caracter != KeyEvent.VK_BACK_SPACE))
        {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
        
        if(txtValoracion.getText().length()>= 3){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtValoracionKeyTyped

    /**
     * Restriccion de caracteres, solo numericos para el campo de texto de buscar oferta
     * @param evt Evento de presionar una tecla
     */
    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        char caracter = evt.getKeyChar();
        if(((caracter < '0') || 
        (caracter > '9')) &&
        (caracter != KeyEvent.VK_BACK_SPACE))
        {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
        
        if(txtDescuento.getText().length()>= 10){
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtBuscarKeyTyped

    /**
     * Funcion que activa el cld de fecha de termina de una oferta
     * @param evt Evento de seleccionar una fecha del cldFechaInicio
     */
    private void cldFechaInicioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cldFechaInicioPropertyChange
        // TODO add your handling code here:
        if (!(cldFechaInicio.getDate() == null)) {
            if (txtDescuento.isEnabled() == true) {
                cldFechaTermino.setEnabled(true);
            }else{
                cldFechaTermino.setEnabled(false);
            }
            cldFechaTermino.setMinSelectableDate(cldFechaInicio.getDate());
        }
    }//GEN-LAST:event_cldFechaInicioPropertyChange

    /**
     * funcion que carga los productos de acuerdo al rubro seleccionado 
     * @param evt Evento de seleccionar un rubro
     */
    private void ddlRubroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddlRubroActionPerformed
        // TODO add your handling code here:
        if (ddlRubro.getSelectedIndex() != 0) {
            ddlProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el producto" }));
            try {
                if (cargaComboProductos() == 0) {
                    JOptionPane.showMessageDialog(null,"No exiten productos ingresados con este rubro",null, JOptionPane.INFORMATION_MESSAGE, null);
                    ddlProducto.setEnabled(false);
                }else{
                    if ((txtDescuento.isEnabled() == true)) {
                        ddlProducto.setEnabled(true);
                    }else{
                        ddlProducto.setEnabled(false);
                    }
                }
            } catch (SQLException ex) {
            
            }
        }
    }//GEN-LAST:event_ddlRubroActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarImagen;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNewOferta;
    private com.toedter.calendar.JDateChooser cldFechaInicio;
    private com.toedter.calendar.JDateChooser cldFechaTermino;
    private javax.swing.JComboBox<Object> ddlProducto;
    private javax.swing.JComboBox<String> ddlRubro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JLabel lblRespuestaBuscar;
    private javax.swing.JLabel lblRespuestaOferta;
    private javax.swing.JPanel pnlBusqueda;
    private javax.swing.JPanel pnlOferta;
    private javax.swing.JTable tablaOfertas;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtDescr;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtValoracion;
    // End of variables declaration//GEN-END:variables

    /**
     * Funcion que convierte un File en una arreglo de bytes ncesarios para guardar la imagen en la base de datos
     * @param archivo
     * @return Arreglo de bytes
     */
    private byte[] cargarImagen(File archivo) {
        FileInputStream entrada;
        FileOutputStream salida;
        Long i = archivo.length();
        Integer tam = i.intValue();
        byte[] byteImg = new byte[tam];
        try{
            entrada = new FileInputStream(archivo);
            entrada.read(byteImg);
        } catch (Exception e){
            
        }
        return byteImg;
    }

    /**
     * Funcion que carga las ofertas de la base de datos en la table de ofertas
     * @throws SQLException 
     */
    private void cargarTabla() throws SQLException{
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("DESCRIPCION");
        modelo.addColumn("Inicio");
        modelo.addColumn("Termino");

        Oferta ofer = new Oferta();
        ResultSet rs = ofer.listadoOfertas(conn);
        Object[] fila = new Object[6];
        while (rs.next()) {
            fila[0] = rs.getInt("ID_OFERTA");
            fila[1] = rs.getString("DESCRIPCION");
            fila[2] = rs.getDate("FEC_INICIO");
            fila[3] = rs.getDate("FEC_TERMINO");
            modelo.addRow(fila);
        }
        tablaOfertas.setModel(modelo);
        tablaOfertas.setVisible(true);
    }

    /**
     * Funcion que carga el combobox de sucursales  en el ddlSucursal
     * @throws SQLException 
     */
    private void cargarComboBox() throws SQLException{
        Sucursal suc = new Sucursal();
        ResultSet rs = suc.listadoSucursales(conn);
        while (rs.next()) {
            Sucursal v_suc = new Sucursal();
            v_suc.setId_sucur(rs.getInt("ID_SUCUR"));
            v_suc.setNombre(rs.getString("NOMBRE"));
            v_suc.setFono(rs.getString("FONO"));
            v_suc.setDireccion(rs.getString("DIRECCION"));
            v_suc.setComuna(rs.getString("COMUNA"));
            v_suc.setEmpresaRut(rs.getString("EMPRESA_RUT"));
        }
        
    }

    /**
     *Los campos de texto para agregar cada inhabilitados
     * Los campos de texto quedan seteados con cadenas vacias
     */
    private void vistaDefault(){
        txtDescr.setEnabled(false);
        txtValoracion.setEnabled(false);
        ddlProducto.setEnabled(false);
        ddlRubro.setEnabled(false);
        cldFechaInicio.setEnabled(false);
        cldFechaTermino.setEnabled(false);
        btnBuscarImagen.setEnabled(false);
        txtDescuento.setEnabled(false);
        btnAgregar.setEnabled(false);
        btnCancelar.setEnabled(false);
        btnNewOferta.setEnabled(true);
        
        btnEliminar.setEnabled(false);
        btnModificar.setEnabled(false);
        txtDescr.setText("");
        txtDescuento.setText("");
        txtValoracion.setText("0");
        cldFechaInicio.setDate(null);
        cldFechaTermino.setDate(null);
        cldFechaInicio.setMinSelectableDate(new Date());
        lblImagen.setIcon(null);
        ddlProducto.setSelectedIndex(0);
        ddlRubro.setSelectedIndex(0);
        txtId.setText("");
        txtBuscar.setText("Ingrese ID de la oferta");
        lblRespuestaBuscar.setText("");
        lblRespuestaOferta.setText("");
    }

    /**
     * Funcion que busca una oferta en la base de datos por id 
     * Luego de encontrada la oferta se despliegan sus datos en los campos de texto
     */
    private void buscarOferta() {
        Oferta ofer = new Oferta();
        ofer = ofer.buscar(Integer.parseInt(txtBuscar.getText()), conn);
        if(!ofer.getDescripcion().equals("ERROR")){
            vistaDefault();
            txtBuscar.setText(String.valueOf(ofer.getId()));
            txtId.setText(String.valueOf(ofer.getId()));
            txtDescr.setText(ofer.getDescripcion());
            txtValoracion.setText(String.valueOf(ofer.getValoracion_total()));
            txtDescuento.setText(String.valueOf(ofer.getPorc_descuento()));
            cldFechaInicio.setDate(ofer.getFecha_inicio());
            cldFechaTermino.setDate(ofer.getFecha_termino());
            Sucursal suc = new Sucursal();
            suc = suc.buscar(ofer.getId_sucursal(), conn);
            Producto pro = new Producto();
            pro = pro.buscar(ofer.getId_producto(), conn);
            ddlRubro.setSelectedItem(pro.getRubro());
            ddlProducto.getModel().setSelectedItem(pro);
            lblImagen.setIcon(new ImageIcon(ofer.getImagen()));
            bytesImg = ofer.getImagen();
            btnModificar.setEnabled(true);
            btnEliminar.setEnabled(true);
        }else if(txtDescr.getText().equals("Ingrese ID de la oferta")){
            vistaDefault();
            lblRespuestaBuscar.setText("Ingrese ID antes de Buscar");
        }else{
            lblRespuestaBuscar.setText("No hay registros de la oferta con ID: " + txtBuscar.getText());
            vistaDefault();
        }
    }
    
    /**
     * Funcion que valida los campos de texto de acuerdo a las reglas de negocio
     * @return true o false dependiendo de si los campos de texto pasaron la prueba
     */
    private boolean validadorCampos() {
        boolean validar = true;
        if (txtDescr.getText().trim().isEmpty()) {
            validar = false;
        }
        if (txtValoracion.getText().trim().isEmpty()) {
            validar = false;
        }
        if (txtDescuento.getText().trim().isEmpty()) {
            validar = false;
        }
        if (cldFechaInicio.getDate() == null) {
            validar = false;
        }
        if (cldFechaTermino.getDate() == null) {
            validar = false;
        }
        if (ddlRubro.getSelectedIndex() == 0) {
            validar = false;
        }
        if(ddlProducto.getSelectedIndex() == 0){
            validar = false;
        }
        return validar;
    }
    
    /**
     * Funcion que valida que el descuento sea valido
     * @param num valor del descuento
     * @return trueo o false dependiendo de si el valor del descuento es permitido 
     */
    public boolean validarDescuento(int num){
        boolean validar = true;
        if ((num < 0) || (num > 100)) {
            validar = false;
        }
        return validar;
    }

    /**
     * Funcion que carga el combobox de productos
     * @return retorna el numero de productos que se cargaron por el rubro 
     * @throws SQLException 
     */
    private int cargaComboProductos() throws SQLException{
        int cont = 0;
        String rubro = "";
        switch (ddlRubro.getSelectedIndex()) {
            case 1:
                rubro = "Alimento";
                break;
            case 2:
                rubro = "Electronica";
                break;
            case 3:
                rubro = "Linea Blanca";
                break;
            case 4:
                rubro = "Vestuario";
                break;
            case 5:
                rubro = "Calzado";
                break;
        }
        
        Producto pro = new Producto();
        pro.setId_sucur(emp_conectado.getId_referencia());
        ResultSet rs1 = pro.listadoProductosPorRubro(conn,rubro);
        while (rs1.next()) {
            cont++;
            Producto v_pro = new Producto();
            v_pro.setId(rs1.getInt("ID_PROD"));
            v_pro.setNombre(rs1.getString("NOMBRE"));
            v_pro.setDescripcion(rs1.getString("DESC_PROD"));
            v_pro.setFecha_ing(rs1.getDate("FEC_INGRESO"));
            v_pro.setEstado(rs1.getString("ESTADO").charAt(0));
            v_pro.setStk_seguro(rs1.getInt("STK_SEGURO"));
            v_pro.setRubro(rs1.getString("RUBRO"));
            v_pro.setDesc_rubro(rs1.getString("DESC_RUBRO"));
            v_pro.setValor(rs1.getInt("VALOR"));
            ddlProducto.addItem(v_pro);
        } 
        return cont;
    }
    
    
    

    
    
    
    
}
